{"version":3,"sources":["./src/app/views/offers/offers-detail/offers-detail.component.html","./src/app/views/offers/offers-list/offers-list.component.html","./src/app/views/offers/offers-profile/offers-profile.component.html","./src/app/views/offers/offers.component.html","./src/app/views/offers/offers-detail/offers-detail.component-wrapper.ts","./src/app/views/offers/offers-detail/offers-detail.component.scss","./src/app/views/offers/offers-detail/offers-detail.component.ts","./src/app/views/offers/offers-list/offers-list.component.ts","./src/app/views/offers/offers-profile/offers-profile.component.ts","./src/app/views/offers/offers-routing.module.ts","./src/app/views/offers/offers.component.scss","./src/app/views/offers/offers.component.ts","./src/app/views/offers/offers.module.ts"],"names":[],"mappings":"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","file":"views-offers-offers-module-es2015.js","sourcesContent":["export default \"<h2 class=\\\"mat-h2\\\">\\n  Offers Detail\\n</h2>\\n\\n<pre>{{ offer | json }} </pre>\\n\\n<button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!isSubscribe()\\\" (click)=\\\"subscribe()\\\">\\n  Inscribirse\\n</button>\\n<button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"isSubscribe()\\\" (click)=\\\"unsubscribe()\\\">\\n  Eliminar oferta\\n</button>\\n\"","export default \"<h3 class=\\\"mat-h3\\\">Cumple con la Titulación (Familia)</h3>\\n\\n<mat-table [dataSource]=\\\"offersStudy\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"job.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Puesto </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.job.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"company.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Empresa </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.company.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"category.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Familia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.category.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef> Fecha </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.date }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"province.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Provincia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.province.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"municipe.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Municipio </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.municipe.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"subscribe\\\">\\n    <mat-header-cell *matHeaderCellDef> Inscrito </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.subscribe ? 'Sí' : 'No' }} </mat-cell>\\n  </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\">\\n      <a style=\\\"cursor:pointer\\\" [routerLink]=\\\"[offer.id]\\\"> <mat-icon class=\\\"sidenav-icon\\\">input</mat-icon> </a>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\\n\\n<h3 class=\\\"mat-h3\\\">Otras Ofertas</h3>\\n\\n\\n<mat-table [dataSource]=\\\"offersOther\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"job.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Puesto </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.job.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"company.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Empresa </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.company.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"category.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Familia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.category.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef> Fecha </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.date }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"province.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Provincia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.province.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"municipe.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Municipio </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.municipe.name }} </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedOtherColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedOtherColumns;\\\"></mat-row>\\n</mat-table>\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","export default \"<h3 class=\\\"mat-h3\\\">Mis Ofertas</h3>\\n\\n<mat-table [dataSource]=\\\"offers\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"job.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Puesto </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.job.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"company.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Empresa </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.company.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"category.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Familia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.category.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef> Fecha </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.date }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"province.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Provincia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.province.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"municipe.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Municipio </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.municipe.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\">\\n      <a style=\\\"cursor:pointer\\\" [routerLink]=\\\"['/admin/offers/', offer.id]\\\"> <mat-icon class=\\\"sidenav-icon\\\">input</mat-icon> </a>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\\n\\n\\n\"","export default \"<h2 class=\\\"mat-h2\\\">Offers</h2>\\n\\n<app-offers-list\\n  [user]=\\\"user$ | async\\\"\\n  [offers]=\\\"offers$ | async\\\"\\n  *ngIf=\\\"isOffersList\\\"\\n></app-offers-list>\\n<app-offers-profile\\n  [user]=\\\"user$ | async\\\"\\n  *ngIf=\\\"!isOffersList\\\"\\n></app-offers-profile>\\n\"","import { Component } from '@angular/core';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AppStore } from 'src/app/shared/states/store.interface';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getProfile } from 'src/app/shared/states/user';\nimport { map, switchMap } from 'rxjs/operators';\nimport { getOfferByID } from 'src/app/shared/states/offers';\nimport * as UserActions from 'src/app/shared/states/user/actions';\n@Component({\n  selector: 'app-offers-detail-wrapper',\n  template: `\n    <app-offers-detail\n      [user]=\"user$ | async\"\n      [offer]=\"offer$ | async\"\n      (subscribeOffer)=\"onSubscribeOffer($event)\"\n      (unsubscribeOffer)=\"onUnsubscribeOffer($event)\"\n    ></app-offers-detail>\n  `\n})\nexport class OffersDetailWrapperComponent {\n  offer$: Observable<Offer>;\n  user$: Observable<User>;\n  constructor(private store$: Store<AppStore>, private route: ActivatedRoute) {\n    this.user$ = this.store$.select(getProfile);\n    this.offer$ = this.route.params.pipe(\n      map(({ id }: { id: string }) => Number.parseInt(id)),\n      switchMap(id => this.store$.select(getOfferByID(id)))\n    );\n  }\n\n  onSubscribeOffer(user: User) {\n    this.store$.dispatch(new UserActions.UpdateUser(user));\n  }\n  onUnsubscribeOffer(user: User) {\n    this.store$.dispatch(new UserActions.UpdateUser(user));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL29mZmVycy9vZmZlcnMtZGV0YWlsL29mZmVycy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-detail',\n  templateUrl: './offers-detail.component.html',\n  styleUrls: ['./offers-detail.component.scss']\n})\nexport class OffersDetailComponent {\n  @Input() offer: Offer;\n  @Input() user: User;\n  @Output() subscribeOffer: EventEmitter<User> = new EventEmitter<User>();\n  @Output() unsubscribeOffer: EventEmitter<User> = new EventEmitter<User>();\n\n  constructor() {}\n\n  subscribe() {\n    const offers = [...this.user.offers, this.offer];\n    const user = {\n      ...this.user,\n      offers\n    };\n    this.subscribeOffer.emit(user);\n  }\n  unsubscribe() {\n    const offers = this.user.offers.filter(\n      _offer => _offer.id !== this.offer.id\n    );\n    const user = {\n      ...this.user,\n      offers\n    };\n    this.unsubscribeOffer.emit(user);\n  }\n  isSubscribe(): boolean {\n    return !!(\n      this.user && this.user.offers.find(_offer => this.offer.id === _offer.id)\n    );\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-list',\n  templateUrl: './offers-list.component.html'\n})\nexport class OffersListComponent implements OnChanges {\n  displayedColumns: string[] = ['job.name', 'company.name', 'category.name', 'date', 'province.name', 'municipe.name', 'subscribe', 'actions' ];\n  displayedOtherColumns: string[] = ['job.name', 'company.name', 'category.name', 'date', 'province.name', 'municipe.name' ];\n\n\n  @Input() user: User;\n  @Input() offers: Offer[];\n  offersStudy: Offer[] = [];\n  offersOther: Offer[] = [];\n  constructor() {}\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.user && changes.offers) {\n      this.selectOffers();\n    }\n  }\n\n  private selectOffers() {\n    const studiesOfUser = this.user.studies;\n    const offersOfUser = this.user.offers;\n    this.offersStudy = this.offers\n      .filter(offer =>\n        studiesOfUser.some(study => study.uid === offer.category.uid)\n      )\n      .map(offer => {\n        const offerUser = !!offersOfUser.find(\n          _offerUser => _offerUser.id === offer.id\n        );\n        return { ...offer, subscribe: offerUser };\n      });\n    this.offersOther = this.offers.filter(offer =>\n      studiesOfUser.every(study => study.uid !== offer.category.uid)\n    );\n  }\n}\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-profile',\n  templateUrl: './offers-profile.component.html'\n})\nexport class OffersProfileComponent implements OnChanges {\n  displayedColumns: string[] = ['job.name', 'company.name', 'category.name', 'date', 'province.name', 'municipe.name', 'actions' ];\n\n  @Input() user: User;\n  offers: Offer[] = [];\n  constructor() {}\n  ngOnChanges() {\n    this.offers = this.user.offers;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailWrapperComponent } from './offers-detail/offers-detail.component-wrapper';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OffersComponent\n  },\n  {\n    path: 'my-offers',\n    component: OffersComponent,\n    data: { my_offers: true }\n  },\n  {\n    path: ':id',\n    component: OffersDetailWrapperComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OffersRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL29mZmVycy9vZmZlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/states/store.interface';\nimport { Observable, of } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { getProfile } from 'src/app/shared/states/user';\nimport { getOffers } from 'src/app/shared/states/offers';\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.scss']\n})\nexport class OffersComponent implements OnInit {\n  user$: Observable<User>;\n  offers$: Observable<Offer[]>;\n  isOffersList = true;\n  constructor(private route: ActivatedRoute, private store$: Store<AppStore>) {\n    this.route.data.subscribe(\n      params => (this.isOffersList = !params.my_offers)\n    );\n    this.user$ = this.store$.select(getProfile);\n    this.offers$ = this.store$.select(getOffers);\n  }\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { OffersRoutingModule } from './offers-routing.module';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailComponent } from './offers-detail/offers-detail.component';\nimport { OffersListComponent } from './offers-list/offers-list.component';\nimport { OffersProfileComponent } from './offers-profile/offers-profile.component';\nimport { OffersDetailWrapperComponent } from './offers-detail/offers-detail.component-wrapper';\n\n@NgModule({\n  declarations: [\n    OffersComponent,\n    OffersProfileComponent,\n    OffersListComponent,\n    OffersDetailComponent,\n    OffersDetailWrapperComponent\n  ],\n  imports: [CommonModule, SharedModule, OffersRoutingModule]\n})\nexport class OffersModule {}\n"],"sourceRoot":"webpack:///"}