{"version":3,"sources":["src/app/views/offers/offers-detail/offers-detail.component.html","src/app/views/offers/offers-list/offers-list.component.html","src/app/views/offers/offers-profile/offers-profile.component.html","src/app/views/offers/offers.component.html","src/app/views/offers/offers-detail/offers-detail.component-wrapper.ts","src/app/views/offers/offers-detail/offers-detail.component.scss","src/app/views/offers/offers-detail/offers-detail.component.ts","src/app/views/offers/offers-list/offers-list.component.ts","src/app/views/offers/offers-profile/offers-profile.component.ts","src/app/views/offers/offers-routing.module.ts","src/app/views/offers/offers.component.scss","src/app/views/offers/offers.component.ts","src/app/views/offers/offers.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<h2 class=\\\"mat-h2\\\">\\n  Offers Detail\\n</h2>\\n\\n<pre>{{ offer | json }} </pre>\\n\\n<button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!isSubscribe()\\\" (click)=\\\"subscribe()\\\">\\n  Inscribirse\\n</button>\\n<button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"isSubscribe()\\\" (click)=\\\"unsubscribe()\\\">\\n  Eliminar oferta\\n</button>\\n\"","export default \"<h3 class=\\\"mat-h3\\\">Cumple con la Titulaci√≥n (Familia)</h3>\\n\\n<mat-table [dataSource]=\\\"offersStudy\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"job.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Puesto </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.job.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"company.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Empresa </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.company.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"category.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Familia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.category.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef> Fecha </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.date }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"province.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Provincia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.province.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"municipe.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Municipio </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.municipe.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"subscribe\\\">\\n    <mat-header-cell *matHeaderCellDef> Inscrito </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.subscribe ? 'S√≠' : 'No' }} </mat-cell>\\n  </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\">\\n      <a style=\\\"cursor:pointer\\\" [routerLink]=\\\"[offer.id]\\\"> <mat-icon class=\\\"sidenav-icon\\\">input</mat-icon> </a>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\\n\\n<h3 class=\\\"mat-h3\\\">Otras Ofertas</h3>\\n\\n\\n<mat-table [dataSource]=\\\"offersOther\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"job.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Puesto </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.job.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"company.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Empresa </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.company.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"category.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Familia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.category.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef> Fecha </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.date }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"province.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Provincia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.province.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"municipe.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Municipio </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.municipe.name }} </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedOtherColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedOtherColumns;\\\"></mat-row>\\n</mat-table>\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","export default \"<h3 class=\\\"mat-h3\\\">Mis Ofertas</h3>\\n\\n<mat-table [dataSource]=\\\"offers\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <ng-container matColumnDef=\\\"job.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Puesto </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.job.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"company.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Empresa </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.company.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"category.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Familia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.category.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"date\\\">\\n    <mat-header-cell *matHeaderCellDef> Fecha </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.date }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"province.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Provincia </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.province.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"municipe.name\\\">\\n    <mat-header-cell *matHeaderCellDef> Municipio </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\"> {{ offer.municipe.name }} </mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"actions\\\">\\n    <mat-header-cell *matHeaderCellDef> Acciones </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let offer\\\">\\n      <a style=\\\"cursor:pointer\\\" [routerLink]=\\\"['/admin/offers/', offer.id]\\\"> <mat-icon class=\\\"sidenav-icon\\\">input</mat-icon> </a>\\n    </mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n</mat-table>\\n\\n\\n\\n\"","export default \"<h2 class=\\\"mat-h2\\\">Offers</h2>\\n\\n<app-offers-list\\n  [user]=\\\"user$ | async\\\"\\n  [offers]=\\\"offers$ | async\\\"\\n  *ngIf=\\\"isOffersList\\\"\\n></app-offers-list>\\n<app-offers-profile\\n  [user]=\\\"user$ | async\\\"\\n  *ngIf=\\\"!isOffersList\\\"\\n></app-offers-profile>\\n\"","import { Component } from '@angular/core';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\nimport { AppStore } from 'src/app/shared/states/store.interface';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getProfile } from 'src/app/shared/states/user';\nimport { map, switchMap } from 'rxjs/operators';\nimport { getOfferByID } from 'src/app/shared/states/offers';\nimport * as UserActions from 'src/app/shared/states/user/actions';\n@Component({\n  selector: 'app-offers-detail-wrapper',\n  template: `\n    <app-offers-detail\n      [user]=\"user$ | async\"\n      [offer]=\"offer$ | async\"\n      (subscribeOffer)=\"onSubscribeOffer($event)\"\n      (unsubscribeOffer)=\"onUnsubscribeOffer($event)\"\n    ></app-offers-detail>\n  `\n})\nexport class OffersDetailWrapperComponent {\n  offer$: Observable<Offer>;\n  user$: Observable<User>;\n  constructor(private store$: Store<AppStore>, private route: ActivatedRoute) {\n    this.user$ = this.store$.select(getProfile);\n    this.offer$ = this.route.params.pipe(\n      map(({ id }: { id: string }) => Number.parseInt(id)),\n      switchMap(id => this.store$.select(getOfferByID(id)))\n    );\n  }\n\n  onSubscribeOffer(user: User) {\n    this.store$.dispatch(new UserActions.UpdateUser(user));\n  }\n  onUnsubscribeOffer(user: User) {\n    this.store$.dispatch(new UserActions.UpdateUser(user));\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL29mZmVycy9vZmZlcnMtZGV0YWlsL29mZmVycy1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-detail',\n  templateUrl: './offers-detail.component.html',\n  styleUrls: ['./offers-detail.component.scss']\n})\nexport class OffersDetailComponent {\n  @Input() offer: Offer;\n  @Input() user: User;\n  @Output() subscribeOffer: EventEmitter<User> = new EventEmitter<User>();\n  @Output() unsubscribeOffer: EventEmitter<User> = new EventEmitter<User>();\n\n  constructor() {}\n\n  subscribe() {\n    const offers = [...this.user.offers, this.offer];\n    const user = {\n      ...this.user,\n      offers\n    };\n    this.subscribeOffer.emit(user);\n  }\n  unsubscribe() {\n    const offers = this.user.offers.filter(\n      _offer => _offer.id !== this.offer.id\n    );\n    const user = {\n      ...this.user,\n      offers\n    };\n    this.unsubscribeOffer.emit(user);\n  }\n  isSubscribe(): boolean {\n    return !!(\n      this.user && this.user.offers.find(_offer => this.offer.id === _offer.id)\n    );\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-list',\n  templateUrl: './offers-list.component.html'\n})\nexport class OffersListComponent implements OnChanges {\n  displayedColumns: string[] = ['job.name', 'company.name', 'category.name', 'date', 'province.name', 'municipe.name', 'subscribe', 'actions' ];\n  displayedOtherColumns: string[] = ['job.name', 'company.name', 'category.name', 'date', 'province.name', 'municipe.name' ];\n\n\n  @Input() user: User;\n  @Input() offers: Offer[];\n  offersStudy: Offer[] = [];\n  offersOther: Offer[] = [];\n  constructor() {}\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.user && changes.offers) {\n      this.selectOffers();\n    }\n  }\n\n  private selectOffers() {\n    const studiesOfUser = this.user.studies;\n    const offersOfUser = this.user.offers;\n    this.offersStudy = this.offers\n      .filter(offer =>\n        studiesOfUser.some(study => study.uid === offer.category.uid)\n      )\n      .map(offer => {\n        const offerUser = !!offersOfUser.find(\n          _offerUser => _offerUser.id === offer.id\n        );\n        return { ...offer, subscribe: offerUser };\n      });\n    this.offersOther = this.offers.filter(offer =>\n      studiesOfUser.every(study => study.uid !== offer.category.uid)\n    );\n  }\n}\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { User } from 'src/app/shared/models/user.model';\n\n@Component({\n  selector: 'app-offers-profile',\n  templateUrl: './offers-profile.component.html'\n})\nexport class OffersProfileComponent implements OnChanges {\n  displayedColumns: string[] = ['job.name', 'company.name', 'category.name', 'date', 'province.name', 'municipe.name', 'actions' ];\n\n  @Input() user: User;\n  offers: Offer[] = [];\n  constructor() {}\n  ngOnChanges() {\n    this.offers = this.user.offers;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailWrapperComponent } from './offers-detail/offers-detail.component-wrapper';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OffersComponent\n  },\n  {\n    path: 'my-offers',\n    component: OffersComponent,\n    data: { my_offers: true }\n  },\n  {\n    path: ':id',\n    component: OffersDetailWrapperComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OffersRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL29mZmVycy9vZmZlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { OffersService } from 'src/app/shared/services/offers.service';\nimport { Offer } from 'src/app/shared/models/offer.model';\nimport { ProfileService } from 'src/app/shared/services/profile.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppStore } from 'src/app/shared/states/store.interface';\nimport { Observable, of } from 'rxjs';\nimport { User } from 'src/app/shared/models/user.model';\nimport { getProfile } from 'src/app/shared/states/user';\nimport { getOffers } from 'src/app/shared/states/offers';\n\n@Component({\n  selector: 'app-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offers.component.scss']\n})\nexport class OffersComponent implements OnInit {\n  user$: Observable<User>;\n  offers$: Observable<Offer[]>;\n  isOffersList = true;\n  constructor(private route: ActivatedRoute, private store$: Store<AppStore>) {\n    this.route.data.subscribe(\n      params => (this.isOffersList = !params.my_offers)\n    );\n    this.user$ = this.store$.select(getProfile);\n    this.offers$ = this.store$.select(getOffers);\n  }\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { OffersRoutingModule } from './offers-routing.module';\nimport { OffersComponent } from './offers.component';\nimport { OffersDetailComponent } from './offers-detail/offers-detail.component';\nimport { OffersListComponent } from './offers-list/offers-list.component';\nimport { OffersProfileComponent } from './offers-profile/offers-profile.component';\nimport { OffersDetailWrapperComponent } from './offers-detail/offers-detail.component-wrapper';\n\n@NgModule({\n  declarations: [\n    OffersComponent,\n    OffersProfileComponent,\n    OffersListComponent,\n    OffersDetailComponent,\n    OffersDetailWrapperComponent\n  ],\n  imports: [CommonModule, SharedModule, OffersRoutingModule]\n})\nexport class OffersModule {}\n"],"sourceRoot":"webpack:///","file":"views-offers-offers-module-es5.js"}